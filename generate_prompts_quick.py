"""
Script simple pour g√©n√©rer et stocker rapidement des prompts/r√©ponses.
Version automatique sans interaction utilisateur.
"""

import pandas as pd
import numpy as np
import json
from datetime import datetime
from pathlib import Path
import sys

# Ajouter le r√©pertoire parent au path
sys.path.insert(0, str(Path(__file__).parent))

def generate_quick_prompts_batch():
    """G√©n√®re rapidement un batch de 200+ prompts vari√©s."""
    
    print("=" * 70)
    print("‚ö° G√âN√âRATION RAPIDE DE PROMPTS POUR CHROMADB")
    print("=" * 70)
    
    # Cat√©gories de prompts avec variations
    prompts_database = {
        'resume_general': [
            "R√©sume les donn√©es",
            "Donne-moi un aper√ßu",
            "Montre-moi les statistiques principales",
            "Quelles donn√©es avons-nous ?",
            "Affiche un overview",
            "Pr√©sente les informations disponibles",
            "D√©cris les donn√©es charg√©es",
            "Combien de lignes et colonnes ?",
            "Quels types de donn√©es ?",
            "Y a-t-il des valeurs manquantes ?"
        ],
        
        'visualisation_distribution': [
            "Cr√©e un histogramme des ventes",
            "Montre la distribution des prix",
            "Affiche la r√©partition des quantit√©s",
            "Fais un graphique de distribution",
            "Visualise les fr√©quences",
            "Histogramme des scores",
            "Distribution par cat√©gorie",
            "R√©partition des valeurs",
            "Graphique de densit√©",
            "Montre les distributions"
        ],
        
        'visualisation_correlation': [
            "Corr√©lation entre prix et ventes",
            "Scatter plot prix vs quantit√©",
            "Relation entre deux variables",
            "Nuage de points ventes/budget",
            "Y a-t-il un lien entre X et Y ?",
            "Montre la relation entre variables",
            "Affiche les corr√©lations",
            "Cr√©e un scatter des donn√©es",
            "Visualise les d√©pendances",
            "Graphique de corr√©lation"
        ],
        
        'visualisation_comparaison': [
            "Ventes par r√©gion",
            "Compare les performances entre groupes",
            "Graphique des moyennes par cat√©gorie",
            "Affiche les totaux par mois",
            "Ventes par vendeur",
            "Revenus par d√©partement",
            "Bar chart des ventes",
            "Compare les r√©gions",
            "Performance par √©quipe",
            "Totaux par segment"
        ],
        
        'visualisation_temporelle': [
            "√âvolution des ventes dans le temps",
            "Tendance des prix",
            "Courbe temporelle",
            "Progression mensuelle",
            "√âvolution annuelle",
            "Tendance sur 6 mois",
            "Line chart temporel",
            "S√©rie chronologique",
            "Graphique d'√©volution",
            "Analyse temporelle"
        ],
        
        'visualisation_matrice': [
            "Heatmap des corr√©lations",
            "Matrice de corr√©lation",
            "Relations entre toutes les variables",
            "Carte de chaleur",
            "Corr√©lations multiples",
            "Visualisation matricielle",
            "Heatmap compl√®te",
            "Toutes les corr√©lations",
            "Matrice de covariance",
            "Graphique de corr√©lation multiple"
        ],
        
        'visualisation_dispersion': [
            "Boxplot des ventes",
            "Distribution avec outliers",
            "Quartiles des prix",
            "Valeurs aberrantes",
            "Dispersion des donn√©es",
            "Bo√Æte √† moustaches",
            "Analyse des outliers",
            "Graphique de dispersion",
            "Distribution statistique",
            "Variabilit√© des donn√©es"
        ],
        
        'analyse_statistiques': [
            "Moyenne des ventes",
            "M√©diane des prix",
            "Total des quantit√©s",
            "√âcart-type",
            "Variance",
            "Percentiles",
            "Statistiques descriptives",
            "Valeurs min et max",
            "Amplitude des donn√©es",
            "Coefficient de variation"
        ],
        
        'analyse_top': [
            "Top 5 produits",
            "Meilleurs vendeurs",
            "Meilleures r√©gions",
            "Produits les plus vendus",
            "Top performers",
            "Classement des ventes",
            "Top 10 clients",
            "Meilleures performances",
            "Ranking par ventes",
            "Leaders du march√©"
        ],
        
        'analyse_filtres': [
            "Ventes sup√©rieures √† 1000",
            "Filtre r√©gion Nord",
            "Donn√©es de janvier",
            "Scores sup√©rieurs √† 80",
            "Prix entre 50 et 100",
            "S√©lectionne cat√©gorie A",
            "Filtre par vendeur",
            "Donn√©es r√©centes",
            "Valeurs positives uniquement",
            "P√©riode sp√©cifique"
        ],
        
        'analyse_comparaison': [
            "Compare Nord et Sud",
            "Quelle r√©gion performe mieux ?",
            "Diff√©rence entre A et B",
            "Comparaison temporelle",
            "Avant vs apr√®s",
            "Groupe 1 vs Groupe 2",
            "Performance relative",
            "√âcart entre r√©gions",
            "Meilleur que la moyenne ?",
            "Qui est en t√™te ?"
        ],
        
        'analyse_tendances': [
            "Tendance des ventes",
            "Croissance ou d√©croissance ?",
            "Y a-t-il une saisonnalit√© ?",
            "Performance s'am√©liore ?",
            "√âvolution sur 6 mois",
            "Ventes en hausse ?",
            "Tendance baissi√®re ?",
            "Cycles dans les donn√©es",
            "Trajectoire future",
            "Pattern temporel"
        ],
        
        'analyse_agr√©gation': [
            "Somme par groupe",
            "Moyenne par cat√©gorie",
            "Total par r√©gion",
            "Agr√©gation mensuelle",
            "Groupement par segment",
            "Consolidation des donn√©es",
            "R√©sum√© par p√©riode",
            "Totaux par type",
            "Moyennes group√©es",
            "Agr√©gation temporelle"
        ],
        
        'questions_specifiques': [
            "Quel est le chiffre d'affaires ?",
            "Combien de clients avons-nous ?",
            "Quelle est la marge moyenne ?",
            "Volume total des ventes ?",
            "Taux de satisfaction ?",
            "Budget disponible ?",
            "Revenus du mois ?",
            "Performance globale ?",
            "Objectifs atteints ?",
            "ROI actuel ?"
        ],
        
        'questions_business': [
            "Quelle strat√©gie recommandes-tu ?",
            "O√π investir en priorit√© ?",
            "Quels produits d√©velopper ?",
            "Quelles r√©gions cibler ?",
            "Opportunit√©s de croissance ?",
            "Points d'am√©lioration ?",
            "Risques identifi√©s ?",
            "Forces et faiblesses ?",
            "Plan d'action ?",
            "KPI √† surveiller ?"
        ],
        
        # üÜï R√âCLAMATIONS & SATISFACTION CLIENT
        'reclamations_distribution': [
            "Distribution des types de r√©clamations",
            "Histogramme des r√©clamations par cat√©gorie",
            "R√©partition des motifs de plainte",
            "Fr√©quence des r√©clamations par type",
            "Graphique des cat√©gories de r√©clamations",
            "Distribution des r√©clamations par gravit√©",
            "R√©partition des incidents par service",
            "Histogramme des r√©clamations mensuelles",
            "Distribution des d√©lais de traitement",
            "Fr√©quence des r√©clamations par canal"
        ],
        
        'reclamations_temporelles': [
            "√âvolution des r√©clamations dans le temps",
            "Tendance mensuelle des plaintes",
            "Courbe des r√©clamations sur 6 mois",
            "Progression des incidents par semaine",
            "S√©rie temporelle des r√©clamations",
            "√âvolution du volume de plaintes",
            "Tendance des r√©clamations critiques",
            "Graphique d'√©volution des incidents",
            "Analyse temporelle des r√©clamations",
            "Saisonnalit√© des plaintes clients"
        ],
        
        'reclamations_analyse': [
            "Top 5 motifs de r√©clamation",
            "Principales causes de plaintes",
            "R√©clamations les plus fr√©quentes",
            "Services avec le plus de r√©clamations",
            "Produits g√©n√©rant le plus de plaintes",
            "Cat√©gories de r√©clamations prioritaires",
            "Points de friction majeurs",
            "Incidents critiques r√©currents",
            "Taux de r√©clamations par service",
            "Analyse des r√©clamations non r√©solues"
        ],
        
        'reclamations_resolution': [
            "Taux de r√©solution des r√©clamations",
            "D√©lai moyen de traitement",
            "Temps de r√©solution par type",
            "Performance de r√©solution par √©quipe",
            "R√©clamations r√©solues vs en attente",
            "Comparaison des d√©lais de traitement",
            "Efficacit√© du service r√©clamation",
            "Graphique de r√©solution par gravit√©",
            "SLA respect√© pour les r√©clamations",
            "√âvolution du taux de r√©solution"
        ],
        
        'satisfaction_scores': [
            "Distribution des scores de satisfaction",
            "Histogramme des notes clients",
            "R√©partition des NPS (Net Promoter Score)",
            "Distribution des √©valuations",
            "Graphique des scores CSAT",
            "Fr√©quence des notes de 1 √† 5",
            "R√©partition promoteurs/d√©tracteurs",
            "Distribution des feedbacks positifs/n√©gatifs",
            "Scores de satisfaction par service",
            "Histogramme des √©valuations clients"
        ],
        
        'satisfaction_temporelle': [
            "√âvolution de la satisfaction client",
            "Tendance du NPS dans le temps",
            "Progression des scores mensuels",
            "Courbe de satisfaction sur 12 mois",
            "√âvolution du CSAT par trimestre",
            "Tendance des avis clients",
            "S√©rie temporelle de satisfaction",
            "Am√©lioration de la satisfaction",
            "Graphique d'√©volution du NPS",
            "Saisonnalit√© de la satisfaction"
        ],
        
        'satisfaction_comparative': [
            "Satisfaction par service",
            "Comparaison NPS entre agences",
            "Scores par cat√©gorie de produit",
            "Satisfaction par canal de contact",
            "Comparaison avant/apr√®s am√©lioration",
            "Performance par √©quipe service client",
            "Satisfaction par segment de client√®le",
            "Benchmark des services",
            "Comparaison r√©gionale de satisfaction",
            "Scores par point de contact"
        ],
        
        'satisfaction_correlation': [
            "Corr√©lation satisfaction et d√©lai de r√©ponse",
            "Relation entre NPS et r√©clamations",
            "Lien satisfaction et temps d'attente",
            "Impact du nombre de contacts sur satisfaction",
            "Corr√©lation score et r√©solution premier contact",
            "Relation entre CSAT et anciennet√© client",
            "Scatter plot satisfaction vs qualit√© service",
            "Corr√©lation entre canaux et satisfaction",
            "Lien entre formation agents et NPS",
            "Impact prix sur satisfaction"
        ],
        
        'satisfaction_sentiments': [
            "Analyse des sentiments clients",
            "R√©partition positif/n√©gatif/neutre",
            "Distribution des √©motions dans feedbacks",
            "Mots-cl√©s des avis n√©gatifs",
            "Th√©matiques dans commentaires positifs",
            "Analyse textuelle des verbatims",
            "Nuage de mots des r√©clamations",
            "Sentiments par cat√©gorie de service",
            "√âvolution du sentiment client",
            "Analyse s√©mantique des retours"
        ],
        
        'kpi_reclamations': [
            "Taux de r√©clamations global",
            "Pourcentage de r√©clamations critiques",
            "Volume moyen mensuel de plaintes",
            "Ratio r√©clamations/clients",
            "Taux de r√©currence des r√©clamations",
            "Co√ªt moyen d'une r√©clamation",
            "Taux d'escalade des incidents",
            "D√©lai moyen de premi√®re r√©ponse",
            "Taux de satisfaction post-r√©solution",
            "Pourcentage SLA respect√©"
        ],
        
        'kpi_satisfaction': [
            "Score NPS actuel",
            "Moyenne CSAT sur 3 mois",
            "Taux de recommandation",
            "Pourcentage de promoteurs",
            "Pourcentage de d√©tracteurs",
            "Score CES (Customer Effort Score)",
            "Taux de r√©tention client",
            "Taux de r√©ponse aux enqu√™tes",
            "Satisfaction globale par canal",
            "Indice de fid√©lit√© client"
        ],
        
        'alertes_qualite': [
            "R√©clamations en hausse anormale",
            "Services avec baisse de satisfaction",
            "Alertes sur d√©lais de traitement",
            "D√©tection d'anomalies dans NPS",
            "Produits avec explosion de plaintes",
            "Canaux performant sous la moyenne",
            "√âquipes n√©cessitant support",
            "R√©clamations non trait√©es urgentes",
            "Clients √† risque de churn",
            "Tendances n√©gatives √©mergentes"
        ],
        
        'tableaux_bord': [
            "Dashboard qualit√© de service",
            "Vue d'ensemble r√©clamations/satisfaction",
            "Tableau de bord service client",
            "KPI r√©clamations consolid√©s",
            "Synth√®se satisfaction client",
            "Rapport hebdomadaire qualit√©",
            "Indicateurs cl√©s de performance",
            "Vue 360¬∞ exp√©rience client",
            "Monitoring temps r√©el r√©clamations",
            "Scorecard satisfaction globale"
        ],
        
        'actions_correctives': [
            "Recommandations d'am√©lioration",
            "Plans d'action pour services critiques",
            "Priorisation des corrections",
            "Opportunit√©s d'am√©lioration identifi√©es",
            "Actions pour r√©duire r√©clamations",
            "Strat√©gies d'am√©lioration satisfaction",
            "Formation n√©cessaire pour √©quipes",
            "Processus √† optimiser",
            "Investissements prioritaires qualit√©",
            "Roadmap am√©lioration exp√©rience client"
        ]
    }
    
    # G√©n√©rer toutes les variations
    all_prompts = []
    for category, prompts in prompts_database.items():
        for prompt in prompts:
            all_prompts.append({
                'category': category,
                'prompt': prompt,
                'dataset': np.random.choice(['ventes', 'clients', 'finances'])
            })
    
    print(f"\n‚úÖ {len(all_prompts)} prompts g√©n√©r√©s")
    print(f"üìä {len(prompts_database)} cat√©gories")
    
    # Sauvegarder dans un fichier
    output_dir = Path("generated_prompts")
    output_dir.mkdir(exist_ok=True)
    
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    output_file = output_dir / f"prompts_catalogue_{timestamp}.json"
    
    catalogue = {
        'metadata': {
            'total_prompts': len(all_prompts),
            'categories': len(prompts_database),
            'generated_at': datetime.now().isoformat(),
            'version': '1.0'
        },
        'categories': list(prompts_database.keys()),
        'prompts': all_prompts
    }
    
    with open(output_file, 'w', encoding='utf-8') as f:
        json.dump(catalogue, f, indent=2, ensure_ascii=False)
    
    print(f"\nüíæ Catalogue sauvegard√©: {output_file}")
    
    # Statistiques par cat√©gorie
    print("\n" + "=" * 70)
    print("üìä STATISTIQUES PAR CAT√âGORIE")
    print("=" * 70)
    
    for category in prompts_database.keys():
        count = sum(1 for p in all_prompts if p['category'] == category)
        print(f"  ‚Ä¢ {category:30s}: {count:3d} prompts")
    
    # Statistiques par dataset
    print("\nüìÇ R√âPARTITION PAR DATASET")
    print("=" * 70)
    
    for dataset in ['ventes', 'clients', 'finances']:
        count = sum(1 for p in all_prompts if p['dataset'] == dataset)
        percentage = count / len(all_prompts) * 100
        print(f"  ‚Ä¢ {dataset:15s}: {count:3d} prompts ({percentage:.1f}%)")
    
    print("\n" + "=" * 70)
    print("üéâ G√âN√âRATION TERMIN√âE AVEC SUCC√àS!")
    print("=" * 70)
    
    return catalogue

def create_indexed_catalogue():
    """Cr√©e un catalogue index√© pour recherche rapide."""
    
    print("\nüìö Cr√©ation d'index pour recherche rapide...")
    
    catalogue = generate_quick_prompts_batch()
    
    # Cr√©er des index
    indices = {
        'by_category': {},
        'by_dataset': {},
        'by_keywords': {}
    }
    
    # Index par cat√©gorie
    for prompt_data in catalogue['prompts']:
        category = prompt_data['category']
        if category not in indices['by_category']:
            indices['by_category'][category] = []
        indices['by_category'][category].append(prompt_data['prompt'])
    
    # Index par dataset
    for prompt_data in catalogue['prompts']:
        dataset = prompt_data['dataset']
        if dataset not in indices['by_dataset']:
            indices['by_dataset'][dataset] = []
        indices['by_dataset'][dataset].append(prompt_data['prompt'])
    
    # Index par mots-cl√©s
    keywords = ['ventes', 'prix', 'r√©gion', 'temps', 'corr√©lation', 
                'graphique', 'moyenne', 'total', 'tendance', 'compare']
    
    for keyword in keywords:
        indices['by_keywords'][keyword] = []
        for prompt_data in catalogue['prompts']:
            if keyword.lower() in prompt_data['prompt'].lower():
                indices['by_keywords'][keyword].append(prompt_data['prompt'])
    
    # Sauvegarder les index
    output_dir = Path("generated_prompts")
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    index_file = output_dir / f"prompts_index_{timestamp}.json"
    
    with open(index_file, 'w', encoding='utf-8') as f:
        json.dump(indices, f, indent=2, ensure_ascii=False)
    
    print(f"‚úÖ Index cr√©√©: {index_file}")
    print(f"   ‚Ä¢ Cat√©gories index√©es: {len(indices['by_category'])}")
    print(f"   ‚Ä¢ Datasets index√©s: {len(indices['by_dataset'])}")
    print(f"   ‚Ä¢ Mots-cl√©s index√©s: {len(indices['by_keywords'])}")
    
    return indices

if __name__ == "__main__":
    # G√©n√©ration simple
    catalogue = generate_quick_prompts_batch()
    
    # Cr√©ation des index
    print("\n")
    indices = create_indexed_catalogue()
    
    print("\n" + "=" * 70)
    print("‚ú® R√âSUM√â FINAL")
    print("=" * 70)
    print(f"üìä Total de prompts g√©n√©r√©s: {catalogue['metadata']['total_prompts']}")
    print(f"üìÇ Cat√©gories: {catalogue['metadata']['categories']}")
    print(f"üóÇÔ∏è  Index cr√©√©s: {len(indices)}")
    print(f"üìÅ Fichiers dans: generated_prompts/")
    print("=" * 70)
